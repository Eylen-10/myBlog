(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{366:function(t,a,s){"use strict";s.r(a);var n=s(10),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript-常用技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-常用技巧"}},[t._v("#")]),t._v(" JavaScript 常用技巧")]),t._v(" "),a("h1",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),a("h2",{attrs:{id:"touppercase-tolowercase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#touppercase-tolowercase"}},[t._v("#")]),t._v(" toUpperCase() / toLowerCase()")]),t._v(" "),a("p",[t._v("转换大小写")]),t._v(" "),a("h2",{attrs:{id:"concat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concat"}},[t._v("#")]),t._v(" concat()")]),t._v(" "),a("p",[t._v("*"),a("code",[t._v("string*.concat(*string1*, *string2*, ..., *stringX*)")])]),t._v(" "),a("p",[t._v("连接两个或多个字符串。")]),t._v(" "),a("p",[t._v("该方法没有改变原有字符串，但是会返回连接两个或多个字符串新字符串。")]),t._v(" "),a("h2",{attrs:{id:"endwith-startswith"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#endwith-startswith"}},[t._v("#")]),t._v(" endWith() / startsWith()")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searchvalue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searchvalue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nsearchvalue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 要搜索的子字符串。\nlength"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 设置字符串的长度。默认值为原始字符串长度 string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length。\nstart"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 可选，查找的开始位置，默认为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("。\n")])])]),a("p",[t._v("判断当前字符串是否是以指定的子字符串结尾 / 开始 的（区分大小写）。")]),t._v(" "),a("h2",{attrs:{id:"indexof-lastindexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexof-lastindexof"}},[t._v("#")]),t._v(" indexOf() / lastIndexOf()")]),t._v(" "),a("p",[t._v("返回某个指定的字符串值在字符串中 首次/最后 出现的位置。")]),t._v(" "),a("h2",{attrs:{id:"includes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[t._v("#")]),t._v(" includes()")]),t._v(" "),a("p",[t._v("查找字符串中是否包含指定的子字符串。")]),t._v(" "),a("h2",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[t._v("#")]),t._v(" replace()")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searchvalue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("newvalue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。")]),t._v(" "),a("p",[t._v("该方法不会改变原始字符串。")]),t._v(" "),a("h2",{attrs:{id:"slice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[t._v("#")]),t._v(" slice()")]),t._v(" "),a("p",[a("code",[t._v("slice(start, end)")]),t._v("方法可提取字符串的某个部分，并以新的字符串返回被提取的部分。")]),t._v(" "),a("p",[t._v("使用 start（包含） 和 end（不包含） 参数来指定字符串提取的部分。")]),t._v(" "),a("p",[t._v("start 参数字符串中第一个字符位置为 0, 第二个字符位置为 1, 以此类推，如果是负数表示从尾部截取多少个字符串，slice(-2) 表示提取原数组中的倒数第二个元素到最后一个元素（包含最后一个元素）。")]),t._v(" "),a("p",[t._v("end 参数如果为负数，-1 指字符串的最后一个字符的位置，-2 指倒数第二个字符，以此类推。")]),t._v(" "),a("h2",{attrs:{id:"substring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substring"}},[t._v("#")]),t._v(" substring()")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("用于提取字符串中介于两个指定下标之间的字符。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("from")]),t._v(" "),a("td",[t._v("必需。一个非负的整数，规定要提取的子串的第一个字符在 string Object 中的位置。")])]),t._v(" "),a("tr",[a("td",[t._v("to")]),t._v(" "),a("td",[t._v("可选。一个非负的整数，比要提取的子串的最后一个字符在 string Object 中的位置多 1。如果省略该参数，那么返回的子串会一直到字符串的结尾。")])])])]),t._v(" "),a("h1",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("h2",{attrs:{id:"push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[t._v("#")]),t._v(" push()")]),t._v(" "),a("p",[t._v("在数组的末尾添加新的元素")]),t._v(" "),a("h2",{attrs:{id:"pop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pop"}},[t._v("#")]),t._v(" pop()")]),t._v(" "),a("p",[t._v("删除数组的最后一个元素")]),t._v(" "),a("h2",{attrs:{id:"shift"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shift"}},[t._v("#")]),t._v(" shift()")]),t._v(" "),a("p",[t._v("删除数组的第一个元素")]),t._v(" "),a("h2",{attrs:{id:"unshift"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unshift"}},[t._v("#")]),t._v(" unshift()")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("unshift()")])]),t._v(" 方法将指定元素添加到数组的开头，并返回数组的新长度。")]),t._v(" "),a("h2",{attrs:{id:"slice-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slice-2"}},[t._v("#")]),t._v(" slice()")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[a("code",[t._v("slice()")])]),t._v(" 方法返回一个新的数组对象，这一对象是一个由 "),a("code",[t._v("start")]),t._v(" 和 "),a("code",[t._v("end")]),t._v(" 决定的原数组的"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Shallow_copy",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅拷贝"),a("OutboundLink")],1),t._v("（包括 "),a("code",[t._v("start")]),t._v("，不包括 "),a("code",[t._v("end")]),t._v("），其中 "),a("code",[t._v("start")]),t._v(" 和 "),a("code",[t._v("end")]),t._v(" 代表了数组元素的索引。原始数组不会被改变。")]),t._v(" "),a("h2",{attrs:{id:"splice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splice"}},[t._v("#")]),t._v(" splice()")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("splice()")])]),t._v(" 方法通过移除或者替换已存在的元素和/或添加新元素"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("就地"),a("OutboundLink")],1),t._v("改变一个数组的内容。")]),t._v(" "),a("p",[t._v("要创建一个删除和/或替换部分内容而不改变原数组的新数组，请使用 "),a("code",[t._v("[toSpliced()](<https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/toSpliced>)")]),t._v("。要访问数组的一部分而不修改它，参见 "),a("code",[t._v("[slice()](<https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/slice>)")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deleteCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deleteCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deleteCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" itemN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nstart"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 从 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 开始计算的索引，表示要开始改变数组的位置，它会被转换成整数。\ndeleteCount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 一个整数，表示数组中要从 start 开始删除的元素数量。\nitem1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" itemN 可选 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 从 start 开始要加入到数组中的元素。\n")])])]),a("h2",{attrs:{id:"fill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fill"}},[t._v("#")]),t._v(" fill()")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[a("code",[t._v("fill()")])]),t._v(" 方法用一个固定值填充一个数组中从起始索引（默认为 "),a("code",[t._v("0")]),t._v("）到终止索引（默认为 "),a("code",[t._v("array.length")]),t._v("）内的全部元素。它返回修改后的数组。")]),t._v(" "),a("h2",{attrs:{id:"filter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[t._v("#")]),t._v(" filter()")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbackFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbackFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[a("code",[t._v("filter()")])]),t._v(" 方法创建给定数组一部分的"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Shallow_copy",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅拷贝"),a("OutboundLink")],1),t._v("，其包含通过所提供函数实现的测试的所有元素。")]),t._v(" "),a("h2",{attrs:{id:"includes-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#includes-2"}},[t._v("#")]),t._v(" includes()")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searchElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searchElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fromIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[a("code",[t._v("includes()")])]),t._v(" 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 "),a("code",[t._v("true")]),t._v("，否则返回 "),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" map()")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbackFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbackFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("////////////////////////////////////////")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pass a function to map")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" array1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("map1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expected output: Array [2, 8, 18, 32]")]),t._v("\n")])])]),a("p",[a("strong",[a("code",[t._v("map()")])]),t._v(" 方法"),a("strong",[t._v("创建一个新数组")]),t._v("，这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成。")]),t._v(" "),a("h2",{attrs:{id:"reduce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reduce"}},[t._v("#")]),t._v(" reduce()")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("reduce()")])]),t._v(" 方法对数组中的每个元素按序执行一个提供的 "),a("strong",[t._v("reducer")]),t._v(" 函数，每一次运行 "),a("strong",[t._v("reducer")]),t._v(" 会将先前元素的计算结果作为参数传入，最后将其结果汇总为单个返回值。")]),t._v(" "),a("p",[t._v("第一次执行回调函数时，不存在“上一次的计算结果”。如果需要回调函数从数组索引为 0 的元素开始执行，则需要传递初始值。否则，数组索引为 0 的元素将被用作初始值，迭代器将从第二个元素开始执行（即从索引为 1 而不是 0 的位置开始）。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0 + 1 + 2 + 3 + 4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" initialValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sumWithInitial "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" array1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accumulator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" currentValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" accumulator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" currentValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initialValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sumWithInitial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expected output: 10")]),t._v("\n")])])]),a("p",[t._v("reducer 逐个遍历数组元素，每一步都将当前元素的值与前一步的结果相加（该结果是之前所有步骤结果的总和）——直到没有更多需要相加的元素。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbackFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbackFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initialValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"reduceright"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reduceright"}},[t._v("#")]),t._v(" "),a("strong",[t._v("reduceRight()")])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("reduceRight()")])]),t._v(" 方法对累加器（accumulator）和数组的每个值（按从右到左的顺序）应用一个函数，并使其成为单个值。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" array1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduceRight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accumulator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" currentValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" accumulator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expected output: Array [4, 5, 2, 3, 0, 1]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduceRight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbackFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduceRight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbackFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initialValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h1",{attrs:{id:"math"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[t._v("#")]),t._v(" Math")]),t._v(" "),a("h2",{attrs:{id:"round"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#round"}},[t._v("#")]),t._v(" round()")]),t._v(" "),a("p",[t._v("四舍五入取整")]),t._v(" "),a("h2",{attrs:{id:"ceil"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ceil"}},[t._v("#")]),t._v(" ceil()")]),t._v(" "),a("p",[t._v("向上取整")]),t._v(" "),a("h2",{attrs:{id:"floor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#floor"}},[t._v("#")]),t._v(" floor()")]),t._v(" "),a("p",[t._v("向下取整")]),t._v(" "),a("h2",{attrs:{id:"trunc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trunc"}},[t._v("#")]),t._v(" trunc()")]),t._v(" "),a("p",[t._v("将数字的小数部分去掉，只保留整数部分。")]),t._v(" "),a("h2",{attrs:{id:"pi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pi"}},[t._v("#")]),t._v(" PI")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 PI 3.14159")]),t._v("\n")])])]),a("h2",{attrs:{id:"e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e"}},[t._v("#")]),t._v(" E")]),t._v(" "),a("p",[t._v("算术常量 e，即自然对数的底数（约等于2.718）。")]),t._v(" "),a("h2",{attrs:{id:"sqrt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sqrt"}},[t._v("#")]),t._v(" sqrt()")]),t._v(" "),a("p",[t._v("平方根")]),t._v(" "),a("h2",{attrs:{id:"abs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abs"}},[t._v("#")]),t._v(" abs()")]),t._v(" "),a("p",[t._v("绝对值")]),t._v(" "),a("h2",{attrs:{id:"log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[t._v("#")]),t._v(" log()")]),t._v(" "),a("p",[t._v("返回数的自然对数（底为e）")]),t._v(" "),a("h2",{attrs:{id:"max"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#max"}},[t._v("#")]),t._v(" max()")]),t._v(" "),a("p",[t._v("返回 x,y,z,...,n 中的最高值")]),t._v(" "),a("h2",{attrs:{id:"min"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#min"}},[t._v("#")]),t._v(" min()")]),t._v(" "),a("p",[t._v("返回 x,y,z,...,n中的最低值")]),t._v(" "),a("h2",{attrs:{id:"pow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pow"}},[t._v("#")]),t._v(" pow()")]),t._v(" "),a("p",[a("code",[t._v("pow(x, y)")]),t._v(" 返回 x 的 y 次幂")]),t._v(" "),a("h2",{attrs:{id:"random"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#random"}},[t._v("#")]),t._v(" random()")]),t._v(" "),a("p",[t._v("返回 0 - 1 之间的随机数")])])}),[],!1,null,null,null);a.default=r.exports}}]);